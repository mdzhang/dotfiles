[alias]

  a = add --all
  st = status
  br = branch
  sh = stash
  shp = stash pop
  shd = stash drop
  c = commit
  cm = commit -m
  ca = commit -a
  cam = commit -am
  cd = commit --amend
  cad = commit -a --amend
  # diff of last 2 commits
  ch = diff HEAD^ HEAD
  d = difftool
  dc = difftool --cached
  f = fetch
  g = grep -p
  ig = update-index --assume-unchanged
  uig = update-index --no-assume-unchanged
  co = checkout
  com = checkout master
  cod = checkout development
  ps = push
  psf = push -f
  pso = push origin
  psfo = push -f origin
  psom = push origin master
  psfom = push -f origin master
  pl = pull
  plr = pull --rebase
  rb = rebase
  rbc = rebase --continue
  rbd = rebase development
  rbi = rebase -i
  rbm = rebase master
  rbs = rebase --skip
  reh = reset --hard
  tgs = show-ref --abbrev=7 --tags
  # remove stale branches from appearing when listing remote branches
  pr = git remote prune origin
  unstage = reset HEAD --
  last = log -1 --pretty=format:\"%h %an, %ar : %s\" HEAD
  llog = log -20 --decorate --pretty=format:\"%h %an, %ar : %s\" HEAD
  lllog = log -50 --decorate --pretty=format:\"%h %an, %ar : %s\" HEAD

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Find commits by commit message

  fm = "!f() { \
    git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Find commits by source code

  fc = "!f() { \
    git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # List remote branches.

  lrb = "!f() { \
      remote="${1:-origin}"; \
      git ls-remote --heads "$remote"; \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[color "branch"]

  current = green bold
  local = green
  remote = yellow

[color "diff"]

  frag = magenta
  meta = yellow
  new = green
  old = red

[color "status"]

  added = green reverse
  changed = yellow reverse
  untracked = red reverse

[pretty]

    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author name
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)

[user]

  name = m d zhang
  email = md.zhang.aka@gmail.com
  signingkey = 8B87E1491655C95A

[commit]

  gpgsign = false

[gpg]

  program = gpg

[core]

  editor = vim
  excludesfile = ~/.ignore
  pager = less -XRF

[pull]

  rebase = true

[rebase]

  instructionFormat = "[%an] %s"

[push]

  default = current

[diff]

  tool = icdiff

[difftool]

  prompt = false

[icdiff]

  options = --highlight --line-numbers

[difftool "sourcetree"]

  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =

[difftool "icdiff"]

  cmd = icdiff $LOCAL $REMOTE

[merge]

  tool = vimdiff
  renameLimit = 999999

[ghq "https://gitlab.com/repos/"]

  vcs = git

[filter "lfs"]

  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process

[include]

  # Load local configs.
  # https://git-scm.com/docs/git-config#_includes
  #
  # [!] The following needs to remain at the end of this file in
  #   order to allow any of the above configs to be overwritten
  #   by the local ones

  path = ~/.gitconfig.local
