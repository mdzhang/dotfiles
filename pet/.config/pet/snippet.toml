[[snippets]]
  description = "[macos] Restart video utilities on OS X (for when camera is on but video is black)"
  command = "sudo killall VDCAssistant && sudo killall AppleCameraAssistant"
  output = ""

[[snippets]]
  description = "[macos] Finding the pid listening on a specific port"
  command = "lsof -n -i4TCP:8000 | grep LISTEN"
  output = ""

[[snippets]]
  description = "[git] Delete all git branches with 'feature' in the name"
  command = "g br -D $(g br | grep feature | tr -d '\\n' | sed  's/\\n//g')"
  output = ""

[[snippets]]
  description = "[sed] Select line 736 from file out.log"
  command = "sed '736q;d' out.log"
  output = ""

[[snippets]]
  description = "[sed] Replace with capture group"
  command = "sed -r 's/^Reading line (.+)$/\\1/g'"
  output = ""

[[snippets]]
  description = "[xidel] xpath selector"
  command = "xidel --html --data index.html --xpath '//div[not(contains(@class, \"announcement\"))]/ul[@class=\"topiclist topics\"]/li[contains(@class, \"row\")]' --output-format=adhoc"
  output = ""

[[snippets]]
  description = "[pup] css selection"
  command = "cat index.html| pup 'ul.topiclist.topics > li.row > dl > dt > div.list-inner > a.topictitle text{}'"
  output = ""

[[snippets]]
  description = "[jq] timestamp"
  command = "grep $(date '+%F') foo.log | grep '\\\"_cmd\\\": \\\"tylenol\\\"' | grep '\\\"msg\\\": \\\"run' | jq '{timestamp: (.timestamp[:19] | strptime(\"%Y-%M-%dT%H:%M:%S\") | mktime), msg}' | jq -s '(.[1].timestamp - .[0].timestamp) / 60'"
  output = ""

[[snippets]]
  description = "[jq] group/select"
  command = "grep $(date '+%F') foo.log | grep '\\\"_cmd\\\": \\\"tylenol\\\"' | grep \"owner.statistics\" | jq -c '{owner_name, hits: .stats.relevant_hits}' | jq -c 'select(.hits > 0)' | sort | jq -c ."
  output = ""

[[snippets]]
  description = "[mlr] pretty print csv"
  command = "mlr --icsv --opprint cat nyc-east-river-bicycle-counts.csv"
  output = ""

[[snippets]]
  description = "[nix] Check battery"
  command = "upower -i /org/freedesktop/UPower/devices/battery_BAT0"
  output = ""

[[snippets]]
  description = "[nix] See routing table"
  command = "ip route list | column -t"
  output = ""

[[snippets]]
  description = "Print PATH entries on different lines"
  command = "echo $PATH |  tr ':' '\\n'"
  output = ""

[[snippets]]
  description = "[zsh] Remove ._ prefix from files with zmv"
  command = "zmv '._(*)' '$1'"
  output = ""

[[snippets]]
  description = "[k8s] Delete all helm deployments"
  command = "helm ls | tail -n+2 | awk '{print $1}' | xargs helm delete"
  output = ""

[[snippets]]
  description = "[macos] Get bundle identifier for application (MacOS)"
  command = "/usr/libexec/PlistBuddy -c 'Print CFBundleIdentifier' /Applications/TerminalVim.app/Contents/Info.plist"
  output = ""

[[snippets]]
  description = "Ping redis"
  command = "curl -w '\\n' http://<host>:6379/ping"
  output = ""

[[snippets]]
  description = "[git] Git rebase and prefer develop changes to the current branch's changes"
  command = "g rb -X ours develop"
  output = ""

[[snippets]]
  description = "[ghq] GHQ get a project from a self-hosted gitlab"
  command = "ghq get ssh://git@gitlab.my.host/group/rep -p"
  output = ""

[[snippets]]
  description = "[git] Add a git tag with a message to a specific SHA"
  command = "g tag -a v0.12-alpha.1 9318430 -m \"Nested entities init support\""
  output = ""

[[snippets]]
  description = "[git] Delete local tags and refresh by pulling from remote"
  command = "git tag -l | xargs git tag -d && git fetch --tags"
  output = ""

[[snippets]]
  description = "[find] Remove files in 'logs' dir with name matching '*MagicMock*' pattern"
  command = "find logs -name \"*MagicMock*\" | xargs -d '\\n' rm"
  output = ""

[[snippets]]
  description = "Highlight occurrences of 'pattern1' in input stream"
  command = "ack --passthru 'pattern1'"
  output = ""

[[snippets]]
  description = "Use ghostscript to extract text from a pdf"
  command = "ghost -dBATCH -dNOPAUSE -sDEVICE=txtwrite -sOutputFile=simple1.txt simple1.pdf"
  output = ""

[[snippets]]
  description = "Generate an XKCD password"
  command = "xkcdpass | tr ' ' '-'"
  output = ""

[[snippets]]
  description = "Get the first token in a whitespace delimited line"
  command = "awk '{print $1}'"
  output = ""

[[snippets]]
  description = "Print all lines in range"
  command = "sed -n '17388352 ,17388452p' filename"
  output = ""

[[snippets]]
  description = "Create file in multiple directories in one go"
  command = "touch data/{key,log}/.keep"
  output = ""

[[snippets]]
  description = "See who's listening on a port, linux"
  command = "netstat -ltnp | grep -w '8080'"
  output = ""

[[snippets]]
  description = "Mount a HFS+ disk for read/write"
  command = "sudo mount -t hfsplus -o force,rw /dev/sdb3 /home/mdzhang/usb"
  output = ""

[[snippets]]
  description = "gzip a directory on macos"
  command = "tar cvf - pcap-parsed | gzip > pcap-parsed.gz"
  output = ""

[[snippets]]
  description = "unzip a macos gzip compressed w/ tar cvf"
  command = "tar xopf pcap-parsed.gz"
  output = ""

[[snippets]]
  description = "[docker] Remove exited docker containers"
  command = "docker ps -a -q -f status=exited  | xargs docker rm"
  output = ""

[[snippets]]
  description = "Generate ubuntu crypt pass (python2)"
  command = "python -c \"from passlib.hash import sha512_crypt; import getpass,string,random; print sha512_crypt.using(salt=''.join([random.choice(string.ascii_letters + string.digits) for _ in range(16)]),rounds=5000).hash(getpass.getpass())\""
  output = ""

[[snippets]]
  description = "List largest S3 objects with size and key"
  command = "aws s3api list-object-versions --bucket my-bucket --query 'Versions[*].{Key: Key, Size: Size}'"
  output = ""

[[snippets]]
  description = "[jq] Get largest element by .Size attribute"
  command = "jq -c 'sort_by(.Size) | last | .Size'"
  output = ""

[[snippets]]
  description = "Get average size of files matching ls pattern in K"
  command = "la out*.pcap | awk '{print $5}' | rev | cut -c 2- | rev | Rscript -e 'd<-scan(\"stdin\", quiet=TRUE)' -e 'mean(d)'                                                                                         14:16:10"
  output = ""

[[snippets]]
  description = "Add to system clipboard on linux"
  command = "xclip -sel clip"
  output = ""

[[snippets]]
  description = "Convert PDF to PNG file"
  command = "pdftoppm input.pdf output.png -png"
  output = ""

[[snippets]]
  description = "[git] delete remote branch"
  command = "git push origin :remote-branch-name"
  output = ""

[[snippets]]
  description = "[git] drop all changes"
  command = "git stash save --keep-index --include-untracked && git stash drop"
  output = ""

[[snippets]]
  description = "GPG encrypt test.txt file"
  command = "gpg --output test.gpg --encrypt --recipient md.zhang.aka@gmail.com test.txt"
  output = ""

[[snippets]]
  description = "GPG decrypt test.gpg file"
  command = "gpg --output test.decrypted.txt --decrypt test.gpg"
  output = ""

[[snippets]]
  description = "Find things in left stream not in right stream"
  command = "comm -23 <(...) <(...)"
  output = ""

[[snippets]]
  description = "basic psql cmd"
  command = "psql -U <user> -h <host> -d <database> -c '<sql>'"
  output = ""

[[snippets]]
  description = "Convert macOS Quicktime mov to gif"
  command = "ffmpeg -i in.mov -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif"
  output = ""

[[snippets]]
  description = "Pipe command output to stderr, stdout, and a file"
  command = "echo 'foo'  2>&1 | tee out.log"
  output = ""

[[snippets]]
  description = "Generate lines following sequence pattern"
  command = "seq -f \"Line %g\" 10"
  output = ""

[[snippets]]
  description = "Print odd numbered lines by specifying start (1) and step (2)"
  command = "sed -n '1~2p'"
  output = ""

[[snippets]]
  description = "replace yaml lines w/ special chars and wrap in quotes"
  command = "sed -i -E 's/^(.+): (.+[@{\\/].+)$/\\1: \"\\2\"/g' f.yaml"
  output = ""

[[snippets]]
  description = "[git] debug vars"
  command = "GIT_TRACE=2 GIT_CURL_VERBOSE=2 GIT_TRACE_PERFORMANCE=2 GIT_TRACE_PACK_ACCESS=2 GIT_TRACE_PACKET=2 GIT_TRACE_PACKFILE=2 GIT_TRACE_SETUP=2 GIT_TRACE_SHALLOW=2"
  output = ""

[[snippets]]
  description = "[git] delete local branches if their remote-tracking references don't exist anymore"
  command = "git fetch --prune"
  output = ""

[[snippets]]
  description = "Split file \"out.sql\" on pattern \"pattern\", and put line containing first match to \"pattern\" into second file"
  command = "csplit -sf file -n 1 out.sql /pattern/-1"
  output = ""

[[snippets]]
  description = "Trim lines"
  command = "awk '{$1=$1;print}'"
  output = ""

[[snippets]]
  description = "Delete every over line"
  command = "awk 'FNR%2' < file"
  output = ""

[[snippets]]
  description = "Reset Core Audio & Restart on macos"
  command = "sudo killall coreaudiod"
  output = ""

[[snippets]]
  description = "Use GHQ to fetch a GitLab repo"
  command = "ghq get ssh://git@gitlab.com/<user>/<repo>.git <user>/<repo> -p"
  output = ""

[[snippets]]
  description = "Duplicate each line, and replace every other line with regex"
  command = "perl -ne 'for$i(0..1){print}' foo  | sed -E '1n;s/<pattern>/<replacement>/;n'"
  output = ""

[[snippets]]
  description = "sudo apt-get --purge remove linux-sound-base alsa-base alsa-utils"
  command = "[debian] Fix dummy output"
  output = ""

[[snippets]]
  description = "Lines to array of strings with jq"
  command = "jq --raw-input --slurp 'split(\"\\n\")'"
  output = ""

[[snippets]]
  description = "jq lines to object stream"
  command = "jq --raw-input --slurp 'split(\"\\n\") | .[:-1] | .[] | {table: .}'"
  output = ""

[[snippets]]
  description = "Replace tabs with spaces"
  command = "find ./ -iname '*.py' -type f -exec bash -c 'expand -t 4 \"$0\" | sponge \"$0\"' {} \\;"
  output = ""

[[snippets]]
  description = "Send a slack alert about a TF apply"
  command = "/usr/local/bin/slack chat send  --author '' --channel '#mdzhang-noti' --color good  --title 'View snippet'   --text 'Ran :terraform: apply in `env-data-test`' --title-link 'https://gitlab.inverselink.com/snippets/1513' --footer 'm d zhang"
  output = ""

[[snippets]]
  description = "Join every other line to make a CSV"
  command = "paste -s -d',\\n' orig.txt"
  output = ""

[[snippets]]
  description = "Count occurrences of ',' char in input string"
  command = "tr -cd ','  | wc -c"
  output = ""

[[snippets]]
  description = "Get every other line in file"
  command = "awk 'NR % 2 == 0' filename"
  output = ""

[[snippets]]
  description = "Clean up git branches"
  command = "git br -D $(comm -23 <(g br | grep -v clear | tr -d ' ' | tr -d '*' | sort) <(cat branches.all) | tr '\\n' ' ')"
  output = ""

[[snippets]]
  description = "Merge json from 2 files with jq"
  command = "jq -c -s '.[0] * .[1]' scratch scratch2"
  output = ""

[[snippets]]
  description = "Redirect output to file and stdout/err"
  command = "echo foo 2>&1 | tee -a out.log"
  output = ""

[[snippets]]
  description = "Get current date as ISO"
  command = "date --iso-8601=seconds"
  output = ""

[[snippets]]
  description = "Generate random string with Python from CLI"
  command = "python -c 'import random; import string; print(\"\".join(random.choice(string.ascii_letters + string.digits) for i in range(30)))'"
  output = ""

[[snippets]]
  description = "Build cscope resources for vim function usage lookup"
  command = "cscope -Rb -s '*'"
  output = ""

[[snippets]]
  description = "[git] make faster"
  command = "git gc && git fsck"
  output = ""

[[snippets]]
  description = "[k8s] force kill terminating pods"
  command = "kubectl get pods | grep 'Terminating' | awk '{print $1}' | xargs -I{} kubectl delete pod {} --grace-period=0 --force"
  output = ""

[[snippets]]
  description = "[git] list all remote branches with date"
  command = "for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=\"%ci %cr\" $branch | head -n 1` \\\\t$branch; done"
  output = ""

[[snippets]]
  description = "[git] delete branches formatted w/ date"
  command = "cat branches.txt | awk 'NF>1{print $NF}' | cut -d '/' -f 2- | xargs git push origin --delete"
  output = ""

[[snippets]]
  description = "[graphite] start branch"
  command = "gt branch create -a -m \"GTKF: Desktop\" mdz/gtkf-desktop"
  output = ""

[[snippets]]
  description = "Only add files I care about"
  command = "git diff --name-only | grep -v sql | grep -v kard | xargs -I{} git add {}"
  output = ""

[[snippets]]
  description = "JSON to CSV"
  command = "dasel -r json -w csv -f data/in.json > data/out.csv"
  output = ""

[[snippets]]
  description = "Generate password"
  command = "openssl rand -hex 32"
  output = ""
